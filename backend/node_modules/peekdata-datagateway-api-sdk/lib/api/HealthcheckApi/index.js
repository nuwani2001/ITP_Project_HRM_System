"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var base_1 = require("../base");
var HealthcheckApi = /** @class */ (function (_super) {
    __extends(HealthcheckApi, _super);
    function HealthcheckApi() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Gets Engine system's status.
         * If system response is positive system returns message "Service is OK" which means system is ready to serve requests.
         * Otherwise error response is returned.
         */
        _this.getHealth = function (requestOptions) {
            return _this.get({
                path: '/healthcheck',
                requestOptions: requestOptions,
            });
        };
        /**
         * Gets overall system's status with the details
         */
        _this.getHealthDetails = function (requestOptions) {
            return _this.get({
                path: '/healthcheck/overall',
                requestOptions: requestOptions,
            });
        };
        /**
         * Gets database connections health
         */
        _this.getConnectionsHealth = function (requestOptions) {
            return _this.get({
                path: '/healthcheck/connections',
                requestOptions: requestOptions,
            });
        };
        /**
         * Gets Data Model's status/health
         */
        _this.getDataModelsHealth = function (requestOptions) {
            return _this.get({
                path: '/healthcheck/datamodels',
                requestOptions: requestOptions,
            });
        };
        return _this;
    }
    return HealthcheckApi;
}(base_1.BaseApi));
exports.HealthcheckApi = HealthcheckApi;
