import { IOptimizedReportResponse, IReportRequest } from 'peekdata-datagateway-api-sdk';
import React, { ReactNode } from 'react';
import { ISelectedNode } from "../../models/node";
import { ITranslations } from "../../models/translations";
import { IAsyncState } from "../../state/action";
import { IRgb } from "../../utils/Color";
interface IStateProps {
    selectedDimensions: ISelectedNode[];
    selectedMetrics: ISelectedNode[];
    dataOptimized: IAsyncState<IOptimizedReportResponse>;
    request: IReportRequest;
    t: ITranslations;
}
interface IDispatchProps {
    onLoadOptimizedData: (request: IReportRequest) => void;
}
interface IDefaultProps {
    showDataTabs: boolean;
    showChart: boolean;
    showDataTable: boolean;
    defaultTab: number;
    loader: ReactNode;
    chartColors?: IRgb[];
}
interface IOwnProps extends Partial<IDefaultProps> {
}
interface IProps extends IStateProps, IDispatchProps, IOwnProps {
}
declare class ReportTabs extends React.PureComponent<IProps> {
    static defaultProps: IDefaultProps;
    componentDidMount(): void;
    componentDidUpdate(): void;
    render(): JSX.Element;
    private loadOptimizedData;
    private renderTabs;
    private getTabsItems;
    private renderWithoutTabs;
    private renderChartTab;
    private renderChart;
    private renderTableTab;
    private renderDataTable;
}
declare const connected: import("react-redux").ConnectedComponent<typeof ReportTabs, Pick<IProps, "loader" | "showDataTabs" | "showChart" | "showDataTable" | "defaultTab" | "chartColors"> & IOwnProps>;
export { connected as ReportTabs };
