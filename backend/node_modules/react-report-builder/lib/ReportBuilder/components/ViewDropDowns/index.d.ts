import { INotOptimizedReportResponse, IOptimizedReportResponse } from 'peekdata-datagateway-api-sdk';
import React, { ReactNode } from 'react';
import { IAsyncState } from "../../state/action";
import "../../../style/components/viewDropDowns.scss";
interface IStateProps {
    dataFull: IAsyncState<INotOptimizedReportResponse>;
    dataOptimized: IAsyncState<IOptimizedReportResponse>;
    file: IAsyncState<string>;
    select: IAsyncState<string>;
}
interface IDispatchProps {
}
interface IDefaultProps {
    showRequestViewButton: boolean;
    showResponseViewButton: boolean;
    loader: ReactNode;
}
interface IOwnProps extends Partial<IDefaultProps> {
}
interface IProps extends IStateProps, IDispatchProps, IOwnProps {
}
declare class ViewDropDowns extends React.PureComponent<IProps> {
    static defaultProps: IDefaultProps;
    render(): JSX.Element;
    private renderLoader;
    private isLoading;
    private renderViewRequest;
    private renderViewResponse;
}
declare const connected: import("react-redux").ConnectedComponent<typeof ViewDropDowns, Pick<IProps, "loader" | "showRequestViewButton" | "showResponseViewButton"> & IOwnProps>;
export { connected as ViewDropDowns };
